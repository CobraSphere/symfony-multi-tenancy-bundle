services:
    MultiTenancyBundle\Command\Migration\DependencyFactory:
        autowire: true

    MultiTenancyBundle\Doctrine\Database\CreateSchemaFactory:
        autowire: true
    
    MultiTenancyBundle\Doctrine\Database\EntityManagerFactory:
        autowire: true

    MultiTenancyBundle\Doctrine\Database\Dialect\MySql\CreateTenantMySql:
        autowire: true
    MultiTenancyBundle\Doctrine\Database\Dialect\MySql\RemoveTenantMySql:
        autowire: true
    MultiTenancyBundle\Doctrine\Database\Dialect\PostgreSql\CreateTenantPsql:
        autowire: true
    MultiTenancyBundle\Doctrine\Database\Dialect\PostgreSql\RemoveTenantPsql:
        autowire: true
    MultiTenancyBundle\Doctrine\Database\Dialect\CreateTenantFactory:
        autowire: true
    MultiTenancyBundle\Doctrine\Database\Dialect\RemoveTenantFactory:
        autowire: true

    MultiTenancyBundle\Doctrine\Database\CreateTenantInterface:
        factory: '@MultiTenancyBundle\Doctrine\Database\Dialect\CreateTenantFactory'
        arguments: ['@doctrine.dbal.tenant_connection']

    MultiTenancyBundle\Doctrine\Database\RemoveTenantInterface:
        factory: '@MultiTenancyBundle\Doctrine\Database\Dialect\RemoveTenantFactory'
        arguments: ['@doctrine.dbal.tenant_connection']

    MultiTenancyBundle\Repository\TenantRepository:
        autowire: true
        tags: ['doctrine.repository_service']

    MultiTenancyBundle\Repository\HostnameRepository:
        autowire: true
        tags: ['doctrine.repository_service']

    MultiTenancyBundle\Service\TenantCreateDatabase:
        autowire: true

    MultiTenancyBundle\Service\TenantRemoveDatabase:
        autowire: true

    MultiTenancyBundle\Service\TenantDatabaseName:
        autowire: true

    MultiTenancyBundle\EventListener\TenantRequestListener:
        autowire: true
        arguments: ['@doctrine.dbal.tenant_connection']
        tags:
            - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }

    MultiTenancyBundle\EventListener\EntityTenantEventListener:
        autowire: true
        tags:
            -
                name: 'doctrine.orm.entity_listener'
                event: 'postPersist'
                entity: 'MultiTenancyBundle\Entity\Tenant'
                priority: 500
                lazy: true
            -
                name: 'doctrine.orm.entity_listener'
                event: 'preRemove'
                entity: 'MultiTenancyBundle\Entity\Tenant'
                priority: 500
                lazy: true

    MultiTenancyBundle\Command\Migration\AbstractDoctrineCommand:
        class: MultiTenancyBundle\Command\Migration\AbstractDoctrineCommand
        arguments: [
            '@Doctrine\Persistence\ManagerRegistry', '@Symfony\Component\HttpKernel\KernelInterface',
            '@MultiTenancyBundle\Command\Migration\DependencyFactory'
        ]
        abstract:  true

    MultiTenancyBundle\Command\Migration\StatusCommand:
        class: MultiTenancyBundle\Command\Migration\StatusCommand
        calls:
            - method: setTenantDatabaseName
              arguments:
                  - '@MultiTenancyBundle\Service\TenantDatabaseName'
        parent: MultiTenancyBundle\Command\Migration\AbstractDoctrineCommand
        tags: 
             - {name: 'console.command', command: 'tenancy:status'}
    
    MultiTenancyBundle\Command\Migration\DiffCommand:
        class: MultiTenancyBundle\Command\Migration\DiffCommand
        calls:
            - method: setTenantDatabaseName
              arguments:
                  - '@MultiTenancyBundle\Service\TenantDatabaseName'
        parent: MultiTenancyBundle\Command\Migration\AbstractDoctrineCommand
        tags: 
             - {name: 'console.command', command: 'tenancy:diff'}
    
    MultiTenancyBundle\Command\Migration\MigrateCommand:
        class: MultiTenancyBundle\Command\Migration\MigrateCommand
        calls:
            - method: setTenantRepository
              arguments:
                  - '@MultiTenancyBundle\Repository\TenantRepository'
            - method: setTenantDatabaseName
              arguments:
                  - '@MultiTenancyBundle\Service\TenantDatabaseName'
        parent: MultiTenancyBundle\Command\Migration\AbstractDoctrineCommand
        tags: 
             - {name: 'console.command', command: 'tenancy:migrate'}